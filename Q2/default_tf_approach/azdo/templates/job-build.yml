parameters:
  azuresubscription: ""
  staterg: ""
  statesa: ""
  statecaontainer: ""
  backendazuremKey: ""
  configdir: ""

jobs:
  - job: Terraform
    pool:
      name: Default
      demands:
        agent.os -equals Linux
    steps:
      - task: TerraformTaskV2@2
        displayName: Init
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: '${{ parameters.azuresubscription }}'
          backendAzureRmResourceGroupName: '${{ parameters.staterg }}'
          backendAzureRmStorageAccountName: '${{ parameters.statesa }}'
          backendAzureRmContainerName: '${{ parameters.statecaontainer }}'
          backendazuremKey: '${{ parameters.backendazuremKey }}'
          workingDirectory: '${{ parameters.configdir }}'
      - bash: |
          terrascan scan -c ${{ parameters.configdir }}
        displayName: TerraScan
      - bash: |
          tfsec ${{ parameters.configdir }}
        displayName: TfSec
      - bash: |
          checkov --directory ${{ parameters.configdir }}
        displayName: Checkov
      - task: TerraformTaskV2@2
        displayName: Validate
        inputs:
          provider: 'azurerm'
          command: 'validate'
          backendServiceArm: '${{ parameters.azuresubscription }}'
          backendAzureRmResourceGroupName: '${{ parameters.staterg }}'
          backendAzureRmStorageAccountName: '${{ parameters.statesa }}'
          backendAzureRmContainerName: '${{ parameters.statecaontainer }}'
          backendazuremKey: '${{ parameters.backendazuremKey }}'
          workingDirectory: '${{ parameters.configdir }}'
      - task: TerraformTaskV2@2
        displayName: Plan
        inputs:
          provider: 'azurerm'
          command: 'plan'
          backendServiceArm: '${{ parameters.azuresubscription }}'
          backendAzureRmResourceGroupName: '${{ parameters.staterg }}'
          backendAzureRmStorageAccountName: '${{ parameters.statesa }}'
          backendAzureRmContainerName: '${{ parameters.statecaontainer }}'
          backendazuremKey: '${{ parameters.backendazuremKey }}'
          workingDirectory: '${{ parameters.configdir }}'